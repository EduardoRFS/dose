=head1 NAME

distcheck - check installability of packages according to metadata 

=head1 SYNOPSIS

=over 

=item B<distcheck> [option] ... I<uri>

=item B<debcheck> [option] ... [I<file>]

=item B<rpmcheck> [option] ... [I<file>]

=item B<eclipsecheck> [option] ... [I<file>] 

=back
=cut

=head1 DESCRIPTION

distcheck determines, for a set of package control stanzas, called the
repository, whether packages of the repository can be installed relative to the
repository according to the inter-package relationsships expressed in the
package control stanzas.  The exact set of relevant control fields and their
meaning depends on the type of the repository. The constraint solving algorithm
is complete, that is it finds a solution whenever there exists one, even for
multiple disjunctive dependencies and deep package conflicts. This problem is
computationally infeasible in theory (that is, NP-complete), but can be solved
very efficiently for package repositories that actually occur in practice. 

Packages are split into foreground and background: only packages in the
foreground are checked for installability, but dependencies may be
satisfied by foreground packages and by background packages. By default,
all packages are in the foreground.

=cut

=head1 Input Specification

Currently supported input types are debian, rpm, and eclipse. The
B<distcheck> tool expects its input specifiations in the form
I<type://pathname> where I<type> is one of B<deb>, B<synthesis>,
B<hdlist> or B<eclipse>, and I<pathname> is the pathname of a file
containing the input. The package metadata found in that file must
correspond to the I<type> given in the URI.

When invoked as I<typeB<check>> then the type of input is assumed to
be I<type>, and repositories (in positional arguments or in the values of
options B<--fg> and B<--bg>) are simply given in form of a pathname of a file
containing the repository. If no positional argument is given then input is
read from standard input.  B<distcheck> also compressed files (.gz , .bz2) as
positional arguments. Input read on standard input cannot be in compressed
form.

=head1 Input Formats

=cut

=head2 Debian

The input file has to contain stanzas in the format
of L<deb-control(5)>, separated by one blank line. For instance, the Packages
files as found on a Debian mirror server, or in the directory I</var/lib/apt/lists/>
of a Debian system, are suitable as input to B<debcheck>. Installability of
packages is analyzed according to their B<Depends>, B<Conflicts>, and B<Provides>
fields with their meaning as of Debian policy version 3.9.0. B<Pre-depends> are
treated like B<Depends>, and B<Breaks> are treated like B<Conflicts>.

If the input contains several packages with the same values of name, version,
and architecture than only the last of these is taken into account, and a
warning is issued.

In the case
of Debian, it is not possible to install at the same time two packages
with the same name but different versions. 

=cut

=head2 Rpm

The input file can be either a I<synthesis> file or a I<hdlist> file.  By
default rpmcheck expects a synthesis file as input. To specify a hdlist file
distcheck must be invoked with a file argument of the form hdlist:// 

=cut

=head2 Eclipse

The input is an 822 file containing the encoding of OSGi plugins  content.xml
files. 

=cut

=head1 OPTIONS

=head2 OPTIONS CONTROLLING FOREGROUND AND BACKGROUND

=over 8

=item B<--fg=>I<file>

Add packages in I<file> to the foreground.

=item B<--bg=>I<file>

Add packages in I<file> to the background.

=item B<--checkonly> I<package> [,I<package>] ... 

Takes a comma-separated list of package names and constraints as argument. Only
packages with names in this list are kept in the foreground, all other packages
are pushed into the background. Ex: "libc6 , 2ping (= 1.2.3-1)"

=item B<--arch=>I<name>

Only keep packages with architecture field I<name> or B<all>, ignore
all other packages.

=item B<--latest>

Only the latest version of each package is kept,
older versions of packages are ignored.

=back

=head2 OPTIONS CONTROLLING OUTPUT

=over 8

=item B<-f>, B<--failures> 

List all packages that are found not to be installable. 

=item B<-s>, B<--successes> 

List all packages that are found to be installable. May be used together
with B<--failures>, in this case the value of the status field in the output
allows to distinguish installable from non-installable packages.

=item B<-e>, B<--explain> 

Give explanations. If used together with B<--failures> then the explanation
consists of dependency chains leading to a conflict or a dependency on a 
missing package. If used together with B<--successes> then the explanation
consists of an installation set.

=item B<--summary>

Gives a more detailed summary of the findings.

=item B<-o>I<file>

Send output to I<file>.

=back

=head2 MISC OPTIONS

=over 8

=item B<-v> 

Enable info / warnings / debug messages.
This option may be repeated up to three times in order to increase verbosity.

=item B<--quiet>

Do not print warning messages

=item B<--progress> 

Show progress bars.

=item B<--timers>

Show timing information. 

=item B<-h, --help> 

Display this list of options.

=item B<--version>

Show program version and exit. 

=back
=cut

=head1 EXIT CODES

Exit codes 0-63 indicate a normal termination of the program, codes 64-127 indicate abnormal termination of the program (such as parse errors, I/O errors).

In case of normal program termination:

- exit code 0 indicates that all foreground packages are found installable;

- exit code 1 indicates that at least one foreground package is found
uninstallable.

=head1 EXAMPLE

Check which packages in a particular distribution are not installable and why: 

 dose-distcheck -v -f -e \
 --bg deb:///var/lib/apt/lists/ftp.fr.debian.org_debian_dists_sid_main_binary-amd64_Packages\
 --bg deb:///var/lib/apt/lists/ftp.fr.debian.org_debian_dists_sid_non-free_binary-amd64_Packages\
 --fg deb:///var/lib/apt/lists/ftp.fr.debian.org_debian_dists_sid_contrib_binary-amd64_Packages

where Packages is the file pertaining to that distribution, as for instance
found in the directory B</var/lib/apt/lists>. 

Check which packages in contrib are not installable when dependencies may
be satisfied from main:
 
  debcheck --failures --bg=main_Packages contrib_Packages

=cut

=head1 NOTE

Distcheck is a complete reimplementation of edos-debcheck, written for the EDOS
project. 

=cut

=head1 AUTHOR

The first version of debcheck was written by Jerome Vouillon for the EDOS
project. The current version has been rewritten on the basis of the dose3
library by Pietro Abate.

=cut

=head1 SEE ALSO
L<B<deb-control>(5)> 

<http://www.edos-project.org> is the home page of the EDOS project. 

<http://www.mancoosi.org> is the home page of the Mancoosi project. 
 
