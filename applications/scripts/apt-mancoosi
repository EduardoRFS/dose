#!/bin/sh

#
# Usage: $0 <apt-get command line, without apt-get>
#

#
# we should be able to parse special arguments indicating the optimization criteria
# at least paranoid and trendy
#

DUDFSAVE=`which dudf-save`
DUDFCUDF=~/mancoosi/trunk/dose3/_build/applications/dudftocudf/deb-dudftocudf.native
SOLVERDIR=~/mancoosi/trunk/competition/solution-checker/D4.2/inesc-udl-solver/
SOLVER=./inesc-udl
SOLCHECK=~/mancoosi/trunk/competition/solution-checker/_build/cudf_sol_check.native
SOLTOAPT=~/mancoosi/trunk/competition/solution-checker/_build/cudf_sol_diff.native

args="$@"

#
# use dudf-save to get a DUDF
#
# use a tmdir to store tmp files

tmpdir=`mktemp -d`

pushd $tmpdir


#
# TODO: check whether sudo is really needed
#

$DUDFSAVE -n -C sudo apt-get -s $args

#
# DUDF is in dudf*.xml
#

dudf=`ls -1 dudf*.xml | head -1`

#
# convert to CUDF
#

$DUDFCUDF --outdir . $dudf 

#
# the CUDF file is *.cudf
#

cudf=`pwd`/`ls -1 *.cudf | head -1`

#
# Possibly edit the CUDF to add extra constraints ...
#

echo "Want to edit the solution?"
read ans
if [ .$ans = .y ]; then
echo "Editing ..."
vi $cudf
echo "Editing done... resuming..."
fi


#
# compute several solutions
#


for crit in paranoid trendy; do
 mkdir $crit
 cd $crit
 here=`pwd`
 echo "Solving in $here with criterion $crit ..."
   pushd $SOLVERDIR
   time ./inesc-udl-$crit $cudf $here/solution.cudf >& $here/solver.log
   popd
 echo "Scoring in $here with criterion $crit ..."
   case $crit in
    paranoid)
     echo "(min #removed, min #changed)" > score
     ;;
    trendy)
     echo "(min #removed, min #notuptodate, min #unsatrecomm, min #new)" > score
     ;;
   esac
   time $SOLCHECK -cudf $cudf -sol solution.cudf -crit $crit >> score
 echo "Building apt-args in $here with criterion $crit ..."
   time $SOLTOAPT -verbose -cudf $cudf -sol solution.cudf > apt-score-args
   tail -n 1 apt-score-args > apt-args
 echo "Dry run of apt-get with apt-args in $here ..."
   time sudo apt-get -s install `cat apt-args` > apt.log
 cd ..
done

#
# exit here
#
exit 0
