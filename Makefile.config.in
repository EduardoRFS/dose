VERSION=@PACKAGE_VERSION@
NAME=@PACKAGE_NAME@

CFLAGS=@CFLAGS@ -fPIC -Wall -pedantic -Werror -Wno-long-long
CPPFLAGS=@CPPFLAGS@
LDFLAGS=@LDFLAGS@

OCAMLFIND=@OCAMLFIND@
DESTDIR=@prefix@
LIBDIR=$(DESTDIR)@OCAMLLIB@
BINDIR=$(DESTDIR)/usr/bin
ifeq ($(DESTDIR),)
  INSTALL=$(OCAMLFIND) install
  UNINSTALL=$(OCAMLFIND) remove
else
  INSTALL=$(OCAMLFIND) install -destdir $(LIBDIR)
  UNINSTALL=$(OCAMLFIND) remove -destdir $(LIBDIR)
endif

ifeq ("@OCAML_OS_TYPE@","freebsd")
  LDFLAGS += -fstack-protector
endif

OCAMLBUILD=@OCAMLBUILD@
#ocamlbest
ifeq ("@OCAMLBEST@","opt")
  OCAMLBEST=native
  OCAMLLIBBEST=cmxa
else
  OCAMLBEST=byte
  OCAMLLIBBEST=cma
endif

LIBS=
TARGETS= \
                 applications/distcheck.$(OCAMLBEST) \
                 applications/deb-buildcheck.$(OCAMLBEST) \
                 applications/ceve.$(OCAMLBEST) \
                 applications/apt-cudf.$(OCAMLBEST) \

ifeq ("@HAS_LIBCUDF@","no")
  LIBS += libcudf/cudf.$(OCAMLLIBBEST) libcudf/cudf.a
  ifeq ("@OCAMLBEST@","opt")
    LIBS += libcudf/cudf.cma
  endif
endif

LIBS += common/common.$(OCAMLLIBBEST) common/common.a
LIBS += deb/debian.$(OCAMLLIBBEST) deb/debian.a
LIBS += rpm/rpm.$(OCAMLLIBBEST) rpm/rpm.a
LIBS += eclipse/eclipse.$(OCAMLLIBBEST) eclipse/eclipse.a
LIBS += algo/algo.$(OCAMLLIBBEST) algo/algo.a
LIBS += doseparse/boilerplateNoRpm.$(OCAMLLIBBEST) doseparse/boilerplateNoRpm.a
LIBS += doseparse/boilerplate.$(OCAMLLIBBEST) doseparse/boilerplate.a

#we always compile bytecode libraries
ifeq ("@OCAMLBEST@","opt")
  LIBS += common/common.cma
  LIBS += deb/debian.cma
  LIBS += rpm/rpm.cma
  LIBS += eclipse/eclipse.cma
  LIBS += algo/algo.cma
  LIBS += doseparse/boilerplate.cma
endif

#rpm support
ifeq ("@HAS_RPM@","yes")
  LIBS += rpm/rpm.$(OCAMLLIBBEST) rpm/rpm.a
endif

#database support
ifeq ("@HAS_DB@","yes") 
  EXPERIMENTAL += experimental/db-cudf.$(OCAMLBEST)
  LIBS += db/db.$(OCAMLLIBBEST)
#  TEST_DB=db
endif

ifeq ("@HAS_XML@","yes")
ifeq ("@HAS_CURL@","yes")
  EXPERIMENTAL += experimental/dudftocudf/deb-dudftocudf.$(OCAMLBEST)
endif
endif

#ocamlgraph support
ifeq ("@HAS_OCAMLGRAPH@","yes")
  TARGET += \
	     applications/strong-deps.$(OCAMLBEST) \
	     applications/strong-conflicts.$(OCAMLBEST)
endif

#ocamlgraph support
ifeq ("@HAS_OCAMLGRAPH@","yes")
  TARGETS += \
	     applications/ceve.$(OCAMLBEST)
endif

#ounit support
ifeq ("@HAS_OUNIT@","yes")
  TESTS= common deb algo $(TEST_DB) $(TEST_RPM)
endif
